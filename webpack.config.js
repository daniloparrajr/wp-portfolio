// WordPress webpack config.
const defaultConfig = require( '@wordpress/scripts/config/webpack.config' );

const getStylesEntryPoints = require( './webpack-utils.js' );

// Plugins.
const RemoveEmptyScriptsPlugin = require( 'webpack-remove-empty-scripts' );

// Utilities.
const path = require( 'path' );

// Add any new entry points by extending the webpack config.
module.exports = {
  ...defaultConfig,
  ...{
    entry: {
      'js/editor':  path.resolve( process.cwd(), 'src/js',   'editor.js'   ),
      'js/core-button':  path.resolve( process.cwd(), 'src/js',   'core-button.js'   ),
      'js/core-post-template':  path.resolve( process.cwd(), 'src/js',   'core-post-template.js'   ),
      ...getStylesEntryPoints()
    },
    module: {
      rules: [
        ...defaultConfig.module.rules,
        {
          test: /\.(png|jp(e*)g|gif)$/,
          type: 'asset/resource',
          generator: {
            filename: 'images/[name][ext]'
          }
        },
      ]
    },
    plugins: [
      // Include WP's plugin config.
      ...defaultConfig.plugins.filter(
        (plugin) => plugin.constructor.name !== "RtlCssPlugin",
      ),

      // Removes the empty `.js` files generated by webpack but
      // sets it after WP has generated its `*.asset.php` file.
      new RemoveEmptyScriptsPlugin( {
        stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS
      } )
    ]
  }
};
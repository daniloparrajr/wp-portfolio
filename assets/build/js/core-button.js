(()=>{"use strict";const t=window.wp.hooks,o=window.wp.compose,r=window.wp.blockEditor,e=window.wp.components,i=window.wp.i18n,n=window.ReactJSXRuntime;function s(t){return(0,n.jsx)(r.InspectorControls,{children:(0,n.jsx)(e.PanelBody,{children:(0,n.jsx)(e.PanelRow,{children:(0,n.jsx)(e.ToggleControl,{__nextHasNoMarginBottom:!0,checked:t.attributes.isCircular,label:(0,i.__)("Circular","portfolio"),help:(0,i.__)("Make the button circular regardless of content."),onChange:()=>t.setAttributes({isCircular:!t.attributes.isCircular})})})})})}(0,t.addFilter)("blocks.registerBlockType","portfolio/additional-button-settings-attributes",((t,o)=>"core/button"!==o?t:{...t,attributes:{...t.attributes,isCircular:{type:"boolean",default:!1}}})),(0,t.addFilter)("editor.BlockEdit","portfolio/additional-button-settings",(0,o.createHigherOrderComponent)((t=>o=>"core/button"!==o.name?(0,n.jsx)(t,{...o}):(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t,{...o}),(0,n.jsx)(s,{...o})]})))),(0,t.addFilter)("editor.BlockListBlock","portfolio/apply-circular-classname-in-button-wrapper",(t=>o=>{if("core/button"!==o.name)return(0,n.jsx)(t,{...o});const{isCircular:r}=o.attributes;let e=`${o.className||""}`.trim();r&&(e+=" is-circular");const i={...o,className:e};return(0,n.jsx)(t,{...i})}))})();